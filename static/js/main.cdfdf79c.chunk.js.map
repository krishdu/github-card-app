{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["CardList","props","profile","map","id","Form","state","userName","handleSubmit","event","a","preventDefault","axios","get","resp","onSubmit","data","setState","className","this","type","onChange","target","value","placeholder","required","React","Component","Card","src","avatar_url","alt","name","location","App","profiles","addNewProfile","profileData","prevState","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4TAMMA,EAAW,SAACC,GAAD,OACf,8BACGA,EAAMC,QAAQC,KAAI,SAAAD,GAAO,OAAI,cAAC,EAAD,eAA2BA,GAAhBA,EAAQE,UAK/CC,E,4MACJC,MAAQ,CAACC,SAAW,I,EAEpBC,a,uCAAe,WAAOC,GAAP,eAAAC,EAAA,6DACbD,EAAME,iBADO,SAEMC,IAAMC,IAAN,uCAA0C,EAAKP,MAAMC,WAF3D,OAEPO,EAFO,OAGb,EAAKb,MAAMc,SAASD,EAAKE,MACzB,EAAKC,SAAS,CAACV,SAAW,KAJb,2C,kGAOf,WAAS,IAAD,OACN,OACE,qBAAKW,UAAU,iBAAf,SACE,sBAAOA,UAAU,cAAcH,SAAUI,KAAKX,aAA9C,SACE,sBAAKU,UAAU,MAAf,UACE,qBAAKA,UAAU,QAAf,SACI,uBAAOE,KAAK,OACVF,UAAY,eACZG,SAAa,SAAAZ,GAAK,OAAI,EAAKQ,SAAS,CAACV,SAAWE,EAAMa,OAAOC,SAC7DA,MAASJ,KAAKb,MAAMC,SACpBiB,YAAY,kBACZC,UAAQ,MAEd,qBAAKP,UAAU,QAAf,SACI,wBAAQE,KAAK,SAASF,UAAU,kBAAhC,mC,GAxBGQ,IAAMC,WAkCnBC,E,4JACL,WACG,IAAM1B,EAASiB,KAAKlB,MACrB,OACG,qBAAKiB,UAAU,kCAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,QAAf,SACI,qBAAKW,IAAK3B,EAAQ4B,WAAYZ,UAAU,yBAAyBa,IAAI,cAEzE,sBAAKb,UAAU,aAAf,UACK,mCAAMhB,EAAQ8B,KAAd,OACA,mCAAM9B,EAAQ+B,SAAd,mB,GAXIP,IAAMC,WAmBnBO,E,4MACJ5B,MAAQ,CACN6B,SAAW,I,EAGbC,cAAgB,SAACC,GACf,EAAKpB,UAAS,SAAAqB,GAAS,MAAK,CAC1BH,SAAQ,sBAAOG,EAAUH,UAAjB,CAA2BE,S,4CAIxC,WACE,OACE,sBAAKnB,UAAU,YAAf,UACE,qBAAKA,UAAU,iBAAf,SAAkCC,KAAKlB,MAAMsC,QAC5C,cAAC,EAAD,CAAMxB,SAAYI,KAAKiB,gBACvB,cAAC,EAAD,CAAUlC,QAAWiB,KAAKb,MAAM6B,kB,GAhBtBT,IAAMC,WAuBTO,IC7EAM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAKZ,MAAM,2BAEba,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cdfdf79c.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport './App.css';\n\n\n//function component\nconst CardList = (props) => (\n  <div>\n    {props.profile.map(profile => <Card key={profile.id} {...profile}/>)}\n  </div>\n);\n\n//class component\nclass Form extends React.Component{\n  state = {userName : ''};\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    const resp = await axios.get(`https://api.github.com/users/${this.state.userName}`)\n    this.props.onSubmit(resp.data);\n    this.setState({userName : ''});\n  };\n\n  render(){\n    return(\n      <div className=\"container mb-3\">\n        <form  className=\"form-inline\" onSubmit={this.handleSubmit}>\n          <div className=\"row\">\n            <div className=\"col-8\">\n                <input type=\"text\"\n                  className = \"form-control\"\n                  onChange = { event => this.setState({userName : event.target.value})} \n                  value = {this.state.userName}\n                  placeholder=\"GitHub username\"\n                  required/>\n            </div>\n            <div className=\"col-4\">\n                <button type=\"submit\" className=\"btn btn-success\">Add card</button>\n            </div>\n          </div>\n          \n        </form>\n      </div>\n    );\n  }\n}\n\nclass Card extends React.Component {\n\trender() {\n    const profile =this.props;\n  \treturn (\n      <div className=\"container border border-warning\">\n        <div className=\"row\">\n          <div className=\"col-4\">\n              <img src={profile.avatar_url} className=\"img-fluid rounded-pill\" alt=\"profile\"/>\n          </div>\n          <div className=\"col-8 mt-5\">\n               <h5> {profile.name} </h5>\n               <h6> {profile.location} </h6>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass App extends React.Component {\n  state = {\n    profiles : [],\n  };\n\n  addNewProfile = (profileData) => {\n    this.setState(prevState => ({\n      profiles : [...prevState.profiles, profileData],\n    }));\n  }\n\n\trender() {\n  \treturn (\n    \t<div className=\"container\">\n    \t  <div className=\"text-center h3\">{ this.props.title }</div>\n        <Form onSubmit = {this.addNewProfile}/>\n        <CardList profile = {this.state.profiles} />\n    \t</div>\n    );\n  }\t\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App title=\"The GitHub Cards App\"/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}